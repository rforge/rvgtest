% Generated by roxygen2 (4.0.1): do not edit by hand
\name{rvgt.range.orc}
\alias{rvgt.range.orc}
\title{Test rejection constants for random variate generator}
\usage{
rvgt.range.orc(gen.data, rdist, dist.params, r.params = list(),
  duration = 0.1, ncores = NULL, timeout = Inf, verbose = FALSE)
}
\arguments{
\item{gen.data}{object of class \code{"rvgt.range.time"} that holds the
result of a previous call to \code{\link{rvgt.range.marginal}}
or \code{\link{rvgt.range.setup}}.
It provides timing information and is used as defaults for some
of the other arguments for this routine, see below.}

\item{rdist}{random number generator for distribution,
default is read from \code{gen.data}.
(function)}

\item{dist.params}{parameters for distribution,
       default is read from \code{gen.data}.
       (non-empty list)

       If both \code{gen.data} and \code{dist.params} are provided, then
       \code{dist.params} is used to extract a subset of parameter values
       from \code{gen.data} via routine \code{\link{get.subrange}}.}

\item{r.params}{additional arguments for \code{rdist},
       default read from \code{gen.data}.
       (list)

       If both \code{gen.data} and \code{r.params} are provided, then
       \code{r.params} is used to extract a subset of parameter values
       from \code{gen.data} via routine \code{\link{get.subrange}}.}

\item{duration}{scheduled duration for a single test in seconds. (numeric)}

\item{ncores}{enable multicore support for performing tests in
       parallel and for setting timeout.
       The following values are accepted:
       \itemize{
       \item \code{NULL}:
             the tests run sequentially on a single core.
       \item A positive integer:
             the tests run on \code{ncores} cores in parallel.
             Notice that \code{ncores=1L} is possible.
             Then only one core is used but the behavior
             is different from \code{ncores=NULL}.
       \item \code{0L}:
             the number of available cores is autodetected by means of
             \code{\link[parallel]{detectCores}}.
       }
       Multicore support is only available on POSIX-compliant OSes
       (basically every but Windows OSes).}

\item{timeout}{set a timeout in seconds for each test. (numeric)

       This allows to protect against unexpected long running times
       or infinite loops.

       It requires multicore support.
       Thus \code{ncores} defaults to \code{1L} (instead of \code{NULL})
       if \code{timeout} is finite.}

\item{verbose}{if \code{TRUE} show progress.
       Ignored when multicore support is enabled and \code{ncores} > 1.
       (logical)}
}
\value{
The function returns an object of class \code{"rvgt.range.gof.orc"}
where the p-values are stored in field \code{$data},
see \code{\link{rvgt.range.engine}} for a description of such objects.
The routine returns \code{NA} in all cases where the setup fails,
\code{NaN} when theoretical rejection constant is less than 1
(i.e., obviously invalid), and
\code{Inf} when the marginal generation time is too slow or when
a timeout has been reached.
}
\description{
Simple goodness-of-fit test for a generation algorithm that is based on
the acceptance-rejection method:
Test hypothesis that observed rejection constant coincides with the
theoretical rejection constant.
}
\details{
This routine performs a test for the observed (empirical) rejection constant
for the given random variate generator for each combinations of parameter
values. It is a very simple but also fast test that compares the
(theoretical) rejection constant with the observed one.
It can be used as a first test as it allows to detect coding errors or
severe numerical problems (or a design error of the algorithm).

Both the theoretical rejection constant and the observed rejection
constant must be provided by random variate generator \code{rdist}
as respective attributes \code{"trc"} and \code{"orc"}
when \code{rdist} is called with argument \code{show.properties=TRUE}.

Of course this test is only sensible if \code{rdist} is based on the
acceptance-rejection method.
}
\examples{
## Generator 'rvgt.range.rdist.example' is a simple generator for
## the beta distribution. It merely demonstrates how the "orc"
## attribute has to be set.

## first we need the marginal generation times
mgt <- rvgt.range.marginal(rdist = rvgt.range.rdist.example,
                           dist.params = list(shape1=c(2,3), shape2=2),
                           duration = 0.01)

## test rejection constants
orc <- rvgt.range.orc(gen.data = mgt,
                      dist.params = list(shape1=c(2,3), shape2=2),
                      duration = 0.01)

## print summary
summary(orc)
}
\author{
Josef Leydold \email{josef.leydold@wu.ac.at}
}
\seealso{
\code{\link{rvgt.range.engine}} for a description of objects of class
\code{"rvgt.range"}.
\code{\link{rvgt.range.rdist.example}} for an example of a random
variate generator that sets attribute \code{"orc"}.
\code{\link{summary.rvgt.range}} for a summary of test results,
\code{\link{plot.rvgt.range}} for plotting the test results.
}

